id,type,file_path,line_number,string_name,original_text,translation,context,notes
4901,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,372,,单个索引,Chỉ mục đơn,} else {//单个索引,Chinese parts: 单个索引
4902,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,374,,还原储存时的类型,Khôi phục kiểu khi lưu,val it = indexes[ix] as Int //还原储存时的类型,Chinese parts: 还原储存时的类型
4903,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,376,,将正数不越界的索引添加到集合,Thêm chỉ mục dương không vượt giới hạn vào tập hợp,until len) indexSet.add(it) //将正数不越界的索引添加到集合,Chinese parts: 将正数不越界的索引添加到集合
4904,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,377,,将负数不越界的索引添加到集合,Thêm chỉ mục âm không vượt giới hạn vào tập hợp,-it) indexSet.add(it + len) //将负数不越界的索引添加到集合,Chinese parts: 将负数不越界的索引添加到集合
4905,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,386,,排除,Loại trừ,if (split == '!') { //排除,Chinese parts: 排除
4906,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,390,,测试过,Đã kiểm tra,elements.removeAll(nullSet) //测试过，这样就行,Chinese parts: 测试过
4907,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,390,,这样就行,Vậy là được,ents.removeAll(nullSet) //测试过，这样就行,Chinese parts: 这样就行
4908,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,392,,选择,Chọn,} else if (split == '.') { //选择,Chinese parts: 选择
4909,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,402,,返回筛选结果,Trả về kết quả lọc,return elements //返回筛选结果,Chinese parts: 返回筛选结果
4910,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,411,,当前数字,Số hiện tại,var curInt: Int? //当前数字,Chinese parts: 当前数字
4911,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,412,,当前数字是否为负,Số hiện tại có phải số âm không,var curMinus = false //当前数字是否为负,Chinese parts: 当前数字是否为负
4912,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,413,,当前数字区间,Khoảng số hiện tại,ist = mutableListOf<Int?>() //当前数字区间,Chinese parts: 当前数字区间
4913,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,414,,暂存数字字符串,Tạm lưu chuỗi số,"var l = """" //暂存数字字符串",Chinese parts: 暂存数字字符串
4914,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,416,,是否为常规索引写法,Có phải cú pháp chỉ mục thông thường không,al head = rus.last() == ']' //是否为常规索引写法,Chinese parts: 是否为常规索引写法
4915,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,418,,常规索引写法,Cú pháp chỉ mục thông thường,if (head) { //常规索引写法[index...],Chinese parts: 常规索引写法
4916,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,420,,跳过尾部,Bỏ qua phần cuối,len-- //跳过尾部']',Chinese parts: 跳过尾部
4917,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,422,,逆向遍历,Duyệt ngược,"while (len-- >= 0) { //逆向遍历,可以无前置规则",Chinese parts: 逆向遍历
4918,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,422,,可以无前置规则,Có thể không có quy tắc tiền tố,"while (len-- >= 0) { //逆向遍历,可以无前置规则",Chinese parts: 可以无前置规则
4919,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,425,,跳过空格,Bỏ qua khoảng trắng,if (rl == ' ') continue //跳过空格,Chinese parts: 跳过空格
4920,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,427,,将数值累接入临时字串中,Tích lũy giá trị vào chuỗi tạm thời,(rl in '0'..'9') l = rl + l //将数值累接入临时字串中，遇到分界符才取出,Chinese parts: 将数值累接入临时字串中
4921,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,427,,遇到分界符才取出,Chỉ trích xuất khi gặp dấu phân cách,'9') l = rl + l //将数值累接入临时字串中，遇到分界符才取出,Chinese parts: 遇到分界符才取出
4922,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,432,,当前数字,Số hiện tại,) -l.toInt() else l.toInt() //当前数字,Chinese parts: 当前数字
4923,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,436,,区间右端或区间间隔,Cuối khoảng hoặc khoảng cách,':' -> curList.add(curInt) //区间右端或区间间隔,Chinese parts: 区间右端或区间间隔
4924,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,443,,是,Là,if (curInt == null) break //是jsoup选择器而非索引列表，跳出,Chinese parts: 是
4925,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,443,,选择器而非索引列表,Bộ chọn chứ không phải danh sách chỉ mục,curInt == null) break //是jsoup选择器而非索引列表，跳出,Chinese parts: 选择器而非索引列表
4926,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,443,,跳出,Thoát,null) break //是jsoup选择器而非索引列表，跳出,Chinese parts: 跳出
4927,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,457,,重置临时列表,Đặt lại danh sách tạm thời,curList.clear() //重置临时列表，避免影响到下个区间的处理,Chinese parts: 重置临时列表
4928,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,457,,避免影响到下个区间的处理,Tránh ảnh hưởng đến xử lý khoảng tiếp theo,curList.clear() //重置临时列表，避免影响到下个区间的处理,Chinese parts: 避免影响到下个区间的处理
4929,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,465,,跳过所有空格,Bỏ qua tất cả khoảng trắng,while (len > 0 && rl == ' ')//跳过所有空格,Chinese parts: 跳过所有空格
4930,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,469,,遇到索引边界,Gặp ranh giới chỉ mục,"ule = rus.substring(0, len) //遇到索引边界，返回结果",Chinese parts: 遇到索引边界
4931,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,469,,返回结果,Trả về kết quả,"us.substring(0, len) //遇到索引边界，返回结果",Chinese parts: 返回结果
4932,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,473,,非索引结构,Cấu trúc không phải chỉ mục,"if (rl != ',') break //非索引结构，跳出",Chinese parts: 非索引结构
4933,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,473,,跳出,Thoát,"if (rl != ',') break //非索引结构，跳出",Chinese parts: 跳出
4934,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,478,,清空,Xóa trống,"l = """" //清空",Chinese parts: 清空
4935,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,479,,重置,Đặt lại,curMinus = false //重置,Chinese parts: 重置
4936,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,482,,阅读原本写法,Đọc cú pháp gốc,} else while (len-- >= 0) { //阅读原本写法，逆向遍历,可以无前置规则,Chinese parts: 阅读原本写法
4937,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,482,,逆向遍历,Duyệt ngược,"while (len-- >= 0) { //阅读原本写法，逆向遍历,可以无前置规则",Chinese parts: 逆向遍历
4938,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,482,,可以无前置规则,Có thể không có quy tắc tiền tố,"(len-- >= 0) { //阅读原本写法，逆向遍历,可以无前置规则",Chinese parts: 可以无前置规则
4939,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,485,,跳过空格,Bỏ qua khoảng trắng,if (rl == ' ') continue //跳过空格,Chinese parts: 跳过空格
4940,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,487,,将数值累接入临时字串中,Tích lũy giá trị vào chuỗi tạm thời,(rl in '0'..'9') l = rl + l //将数值累接入临时字串中，遇到分界符才取出,Chinese parts: 将数值累接入临时字串中
4941,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,487,,遇到分界符才取出,Chỉ trích xuất khi gặp dấu phân cách,'9') l = rl + l //将数值累接入临时字串中，遇到分界符才取出,Chinese parts: 遇到分界符才取出
4942,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,491,,分隔符或起始符,Dấu phân cách hoặc ký tự bắt đầu,| rl == '.' || rl == ':') { //分隔符或起始符,Chinese parts: 分隔符或起始符
4943,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,493,,当前数字追加到列表,Thêm số hiện tại vào danh sách,-l.toInt() else l.toInt()) // 当前数字追加到列表,Chinese parts: 当前数字追加到列表
4944,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,501,,非索引结构,Cấu trúc không phải chỉ mục,} else break //非索引结构，跳出循环,Chinese parts: 非索引结构
4945,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,501,,跳出循环,Thoát vòng lặp,} else break //非索引结构，跳出循环,Chinese parts: 跳出循环
4946,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,503,,清空,Xóa trống,"l = """" //清空",Chinese parts: 清空
4947,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeByJSoup.kt,504,,重置,Đặt lại,curMinus = false //重置,Chinese parts: 重置
4948,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeRule.kt,85,,内容不可空,Nội dung không được để trống,"= null) throw AssertionError(""内容不可空（Content cannot be null）"")",Chinese parts: 内容不可空
4949,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeRule.kt,424,,规则,Quy tắc,"Debug.log(""≡@put 规则 JSON 格式不规范，请改为规范格式"")",Chinese parts: 规则
4950,source_code,app\src\main\java\io\legado\app\model\analyzeRule\AnalyzeRule.kt,424,,格式不规范,Định dạng không chuẩn,"Debug.log(""≡@put 规则 JSON 格式不规范，请改为规范格式"")",Chinese parts: 格式不规范