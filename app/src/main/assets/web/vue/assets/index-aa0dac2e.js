import { r as Ee, o as l, c as C, a as se, b as ie, d as U, e as g, w as p, f as b, u as i, l as z, g as _, F as O, E as Ve, h as he, p as Ne, i as Te, j as Ie, k as B, m as ge, s as Y, n as G, t as X, q as _e, v as me, x as le, y as $e, z as P, A as K, B as Se, C as Le, D as Re, G as ce, V as Oe, H as Pe, I as Z, J as Je, K as ye, L as De, M as $, N as Ae, O as je, P as A, Q as fe, R as be, S as H, T as Ke, U as Me, W as He, X as Fe, Y as qe, Z as ze, _ as We, $ as Ge, a0 as Qe, a1 as Xe } from "./vendor-b9134af1.js"; (function () { const t = document.createElement("link").relList; if (t && t.supports && t.supports("modulepreload")) return; for (const n of document.querySelectorAll('link[rel="modulepreload"]')) s(n); new MutationObserver(n => { for (const r of n) if (r.type === "childList") for (const a of r.addedNodes) a.tagName === "LINK" && a.rel === "modulepreload" && s(a) }).observe(document, { childList: !0, subtree: !0 }); function o(n) { const r = {}; return n.integrity && (r.integrity = n.integrity), n.referrerPolicy && (r.referrerPolicy = n.referrerPolicy), n.crossOrigin === "use-credentials" ? r.credentials = "include" : n.crossOrigin === "anonymous" ? r.credentials = "omit" : r.credentials = "same-origin", r } function s(n) { if (n.ep) return; n.ep = !0; const r = o(n); fetch(n.href, r) } })(); const Ye = "modulepreload", Ze = function (e, t) { return new URL(e, t).href }, ue = {}, ne = function (t, o, s) { if (!o || o.length === 0) return t(); const n = document.getElementsByTagName("link"); return Promise.all(o.map(r => { if (r = Ze(r, s), r in ue) return; ue[r] = !0; const a = r.endsWith(".css"), k = a ? '[rel="stylesheet"]' : ""; if (!!s) for (let w = n.length - 1; w >= 0; w--) { const v = n[w]; if (v.href === r && (!a || v.rel === "stylesheet")) return } else if (document.querySelector(`link[href="${r}"]${k}`)) return; const S = document.createElement("link"); if (S.rel = a ? "stylesheet" : Ye, a || (S.as = "script", S.crossOrigin = ""), S.href = r, document.head.appendChild(S), a) return new Promise((w, v) => { S.addEventListener("load", w), S.addEventListener("error", () => v(new Error(`Unable to preload CSS for ${r}`))) }) })).then(() => t()) }, J = (e, t) => { const o = e.__vccOpts || e; for (const [s, n] of t) o[s] = n; return o }, et = {}; function tt(e, t) { const o = Ee("router-view"); return l(), C(o) } const ot = J(et, [["render", tt]]), ke = [{ path: "/", name: "shelf", component: () => ne(() => import("./BookShelf-335000ab.js"), ["./BookShelf-335000ab.js", "./vendor-b9134af1.js", "./vendor-5578283d.css", "./loading-895cca8e.js", "./loading-c009631e.css", "./BookShelf-84e79ecf.css"], import.meta.url) }, { path: "/chapter", name: "chapter", component: () => ne(() => import("./BookChapter-0f403887.js"), ["./BookChapter-0f403887.js", "./vendor-b9134af1.js", "./vendor-5578283d.css", "./loading-895cca8e.js", "./loading-c009631e.css", "./BookChapter-06bf4dbb.css"], import.meta.url) }]; se({ history: ie(), routes: ke }); const L = e => (Ne("data-v-aee57c78"), e = e(), Te(), e), nt = L(() => _("br", null, null, -1)), rt = L(() => _("br", null, null, -1)), st = L(() => _("br", null, null, -1)), it = L(() => _("br", null, null, -1)), lt = L(() => _("br", null, null, -1)), at = { style: { "margin-top": "20px" } }, ct = L(() => _("code", null, "^$()[]{}.?+*|", -1)), ut = L(() => _("br", null, null, -1)), dt = L(() => _("code", null, "(?s)", -1)), pt = L(() => _("br", null, null, -1)), ht = L(() => _("code", null, "(?m)", -1)), gt = L(() => _("br", null, null, -1)), _t = L(() => _("code", null, "(?i)", -1)), mt = L(() => _("br", null, null, -1)), St = { __name: "SourceHelp", setup(e) { return (t, o) => { const s = Ve, n = he; return l(), U(O, null, [g(s, { icon: i(z), href: "https://alanskycn.gitee.io/teachme/", target: "_blank" }, { default: p(() => [b("Hướng dẫn sản xuất nguồn sách")]), _: 1 }, 8, ["icon"]), nt, g(s, { icon: i(z), href: "https://zhuanlan.zhihu.com/p/29436838", target: "_blank" }, { default: p(() => [b("Hướng dẫn cơ bản XPath")]), _: 1 }, 8, ["icon"]), rt, g(s, { icon: i(z), href: "https://zhuanlan.zhihu.com/p/32187820", target: "_blank" }, { default: p(() => [b("Hướng dẫn XPath nâng cao")]), _: 1 }, 8, ["icon"]), st, g(s, { icon: i(z), href: "https://www.w3cschool.cn/regex_rmjc", target: "_blank" }, { default: p(() => [b("Hướng dẫn biểu thức chính quy")]), _: 1 }, 8, ["icon"]), it, g(s, { icon: i(z), href: "https://regexr-cn.com/", target: "_blank" }, { default: p(() => [b("Công cụ xác thực trực tuyến biểu thức chính quy")]), _: 1 }, 8, ["icon"]), lt, _("div", at, [_("span", null, [g(n, null, { default: p(() => [ct, b(" Đây là các ký hiệu đặc biệt thông thường của java, cần phải thoát khỏi kết hợp")]), _: 1 })]), ut, _("span", null, [g(n, null, { default: p(() => [dt, b(" Tiền tố biểu thị phân tích cú pháp chéo dòng")]), _: 1 })]), pt, _("span", null, [g(n, null, { default: p(() => [ht, b(" Tiền tố cho biết khớp từng dòng")]), _: 1 })]), gt, _("span", null, [g(n, null, { default: p(() => [_t, b(" Tiền tố cho biết trường hợp đó bị bỏ qua")]), _: 1 })]), mt])], 64) } } }, yt = J(St, [["__scopeId", "data-v-aee57c78"]]), ft = 1e3, E = Ie.create({ baseURL: location.origin, timeout: 120 * ft }), { hostname: ve, port: Ce } = new URL(location.origin), bt = /source/i.test(location.href), kt = e => { throw bt && B({ message: "lỗi phụ trợ, kiểm tra mạng hoặc đọc app", type: "error" }), e }; E.interceptors.response.use(e => e, kt); const vt = () => E.get("/getReadConfig"), Ct = e => E.post("/saveReadConfig", e), wt = e => E.post("/saveBookProgress", e), xt = e => { e && navigator.sendBeacon(`${location.origin}/saveBookProgress`, JSON.stringify(e)) }, Bt = () => E.get("/getBookshelf"), Ut = e => E.get("/getChapterList?url=" + encodeURIComponent(e)), Et = (e, t) => E.get("/getBookContent?url=" + encodeURIComponent(e) + "&index=" + t), Vt = (e, t, o) => { const s = `ws://${ve}:${Number(Ce) + 1}/searchBook`, n = new WebSocket(s); n.onopen = () => { n.send(`{"key":"${e}"}`) }, n.onmessage = ({ data: r }) => t(r), n.onclose = () => { o() } }, Nt = e => E.post("/saveBook", e), Tt = e => E.post("/deleteBook", e), Q = /bookSource/i.test(location.href), It = () => Q ? E.get("getBookSources") : E.get("getRssSources"), $t = e => Q ? E.post("saveBookSource", e) : E.post("saveRssSource", e), Lt = e => Q ? E.post("saveBookSources", e) : E.post("saveRssSources", e), Rt = e => Q ? E.post("deleteBookSources", e) : E.post("deleteRssSources", e), Ot = (e, t, o, s) => { const n = `ws://${ve}:${Number(Ce) + 1}/${Q ? "bookSource" : "rssSource"}Debug`, r = new WebSocket(n); r.onopen = () => { r.send(JSON.stringify({ tag: e, key: t })) }, r.onmessage = ({ data: a }) => o(a), r.onclose = () => { B({ message: "Gỡ lỗi đã tắt!", type: "info" }), s() } }, j = { getReadConfig: vt, saveReadConfig: Ct, saveBookProgress: wt, saveBookProgressWithBeacon: xt, getBookShelf: Bt, getChapterList: Ut, getBookContent: Et, search: Vt, saveBook: Nt, deleteBook: Tt, getSources: It, saveSources: Lt, saveSource: $t, deleteSource: Rt, debug: Ot }, W = e => e == null || e.length === 0 || /^\s+$/.test(e), ae = e => "bookSourceName" in e, Pt = e => ae(e) ? !W(e.bookSourceName) && !W(e.bookSourceUrl) && !W(e.bookSourceType) : !W(e.sourceName) && !W(e.sourceName), ee = e => ae(e) ? e.bookSourceUrl : e.sourceUrl, Jt = (e, t) => { var o, s, n, r, a, k, m, S; return ae(e) ? (((o = e.bookSourceName) == null ? void 0 : o.includes(t)) || ((s = e.bookSourceUrl) == null ? void 0 : s.includes(t)) || ((n = e.bookSourceGroup) == null ? void 0 : n.includes(t)) || ((r = e.bookSourceComment) == null ? void 0 : r.includes(t))) ?? !1 : (((a = e.sourceName) == null ? void 0 : a.includes(t)) || ((k = e.sourceUrl) == null ? void 0 : k.includes(t)) || ((m = e.sourceGroup) == null ? void 0 : m.includes(t)) || ((S = e.sourceComment) == null ? void 0 : S.includes(t))) ?? !1 }, re = e => { const t = new Map; return e.forEach(o => t.set(ee(o), o)), t }, Dt = { ruleSearch: {}, ruleBookInfo: {}, ruleToc: {}, ruleContent: {}, ruleReview: {}, ruleExplore: {} }, At = {}, F = /bookSource/i.test(location.href), de = F ? Dt : At, M = ge("source", { state: () => ({ bookSources: [], rssSources: [], savedSources: [], currentSource: de, currentTab: localStorage.getItem("tabName") || "editTab", editTabSource: {}, isDebuging: !1 }), getters: { sources: e => F ? e.bookSources : e.rssSources, sourcesMap: e => re(e.sources), savedSourcesMap: e => re(e.savedSources), currentSourceUrl: e => F ? e.currentSource.bookSourceUrl : e.currentSource.sourceUrl, searchKey: e => F ? e.currentSource.ruleSearch.checkKeyWord || "của tôi" : null }, actions: { startDebug() { this.currentTab = "editDebug", this.isDebuging = !0 }, debugFinish() { this.isDebuging = !1 }, saveSources(e) { F ? this.bookSources = e : this.rssSources = e }, setPushReturnSources(e) { this.savedSources = e }, deleteSources(e) { let t = F ? this.bookSources : this.rssSources; e.forEach(o => { let s = t.indexOf(o); s > -1 && t.splice(s, 1) }) }, saveCurrentSource() { let e = this.currentSource, t = this.sourcesMap; t.set(ee(e), JSON.parse(JSON.stringify(e))), this.saveSources(Array.from(t.values())) }, changeCurrentSource(e) { this.currentSource = JSON.parse(JSON.stringify(e)) }, changeTabName(e) { this.currentTab = e, localStorage.setItem("tabName", e) }, changeEditTabSource(e) { this.editTabSource = JSON.parse(JSON.stringify(e)) }, editHistory(e) { let t; if (localStorage.getItem("history")) t = JSON.parse(localStorage.getItem("history")), t.new.push(e), t.new.length > 50 && t.new.shift(), t.old.length > 50 && t.old.shift(), localStorage.setItem("history", JSON.stringify(t)); else { const o = { new: [e], old: [] }; localStorage.setItem("history", JSON.stringify(o)) } }, editHistoryUndo() { if (localStorage.getItem("history")) { let e = JSON.parse(localStorage.getItem("history")); e.old.push(this.currentSource), e.new.length && (this.currentSource = e.new.pop()), localStorage.setItem("history", JSON.stringify(e)) } }, clearAllHistory() { localStorage.setItem("history", JSON.stringify({ new: [], old: [] })) }, clearEdit() { this.editTabSource = {}, this.currentSource = de }, clearAllSource() { this.bookSources = [], this.rssSources = [], this.savedSources = [] } } }); const jt = { __name: "SourceItem", props: ["source"], setup(e) { const t = e, o = M(), { savedSourcesMap: s, currentSourceUrl: n } = Y(o), r = G(() => ee(t.source)), a = m => { o.changeCurrentSource(m) }, k = G(() => { const m = s.value; return m.size == 0 ? !1 : !m.has(r.value) }); return (m, S) => { const w = le, v = $e; return l(), C(v, { size: "large", border: "", label: i(r), class: me({ error: i(k), edit: i(r) == i(n) }) }, { default: p(() => [b(X(e.source.bookSourceName || e.source.sourceName) + " ", 1), g(w, { text: "", icon: i(_e), onClick: S[0] || (S[0] = x => a(e.source)) }, null, 8, ["icon"])]), _: 1 }, 8, ["label", "class"]) } } }, Kt = J(jt, [["__scopeId", "data-v-830cee5a"]]); const Mt = { class: "tool" }, Ht = { __name: "SourceList", setup(e) { const t = M(), o = P([]), s = P(""), { sources: n, sourcesMap: r } = Y(t), a = G(() => { const c = s.value; return c === "" ? n.value : n.value.filter(y => Jt(y, c)) }), k = G(() => { const c = o.value; if (c.length == 0) return []; const y = s.value == "" ? r.value : re(a.value); return c.reduce((V, f) => { const N = y.get(f); return N && V.push(N), V }, []) }), m = () => { const c = k.value; j.deleteSource(c).then(({ data: y }) => { if (!y.isSuccess) return B.error(y.errorMsg); t.deleteSources(c); const V = Pe(o.value); c.forEach(f => { const N = V.indexOf(ee(f)); N > -1 && V.splice(N, 1) }), o.value = V }) }, S = () => { t.clearAllSource(), o.value = [] }, w = () => { const c = document.createElement("input"); c.type = "file", c.accept = ".json,.txt", c.addEventListener("change", y => { const V = y.target.files[0]; var f = new FileReader; f.readAsText(V), f.onload = () => { try { const N = JSON.parse(f.result); t.saveSources(N) } catch { B({ message: "Định dạng nguồn tải lên bị sai", type: "error" }) } } }), c.click() }, v = /bookSource/.test(window.location.href), x = () => { const c = document.createElement("a"); let y = o.value.length === 0 ? a.value : k.value, V = v ? "BookSource" : "RssSource"; c.download = `${V}_${Date().replace(/.*?\s(\d+)\s(\d+)\s(\d+:\d+:\d+).*/, "$2$1$3").replace(/:/g, "")}.json`; let f = new Blob([JSON.stringify(y, null, 4)], { type: "application/json" }); c.href = window.URL.createObjectURL(f), c.click() }; return (c, y) => { const V = Z, f = le, N = Je; return l(), U(O, null, [g(V, { modelValue: i(s), "onUpdate:modelValue": y[0] || (y[0] = T => K(s) ? s.value = T : null), class: "search", "prefix-icon": i(Se), placeholder: "lọc nguồn" }, null, 8, ["modelValue", "prefix-icon"]), _("div", Mt, [g(f, { onClick: w, icon: i(Le) }, { default: p(() => [b("Mở")]), _: 1 }, 8, ["icon"]), g(f, { disabled: i(a).length === 0, onClick: x, icon: i(Re) }, { default: p(() => [b("Dẫn xuất")]), _: 1 }, 8, ["disabled", "icon"]), g(f, { type: "danger", icon: i(ce), onClick: m, disabled: i(k).length === 0 }, { default: p(() => [b("xóa bỏ")]), _: 1 }, 8, ["icon", "disabled"]), g(f, { type: "danger", icon: i(ce), onClick: S, disabled: i(n).length === 0 }, { default: p(() => [b("trống")]), _: 1 }, 8, ["icon", "disabled"])]), g(N, { id: "source-list", modelValue: i(o), "onUpdate:modelValue": y[1] || (y[1] = T => K(o) ? o.value = T : null) }, { default: p(() => [g(i(Oe), { style: { height: "100%", "overflow-y": "auto", "overflow-x": "hidden" }, "data-key": T => T.bookSourceUrl || T.sourceUrl, "data-sources": i(a), "data-component": Kt, "estimate-size": 45 }, null, 8, ["data-key", "data-sources"])]), _: 1 }, 8, ["modelValue"])], 64) } } }, Ft = J(Ht, [["__scopeId", "data-v-cd1572ca"]]); const qt = {
    __name: "SourceDebug", setup(e) {
        const t = M(), o = P(""), s = P(""); ye(() => t.isDebuging, () => { t.isDebuging && r() }); const n = k => {
            let m = document.querySelector("#debug-text"); m.scrollTop = m.scrollHeight, o.value += k + `
`}, r = async () => { o.value = "", await j.saveSource(t.currentSource), j.debug(t.currentSourceUrl, s.value || t.searchKey, n, t.debugFinish) }, a = G(() => /bookSource/.test(window.location.href)); return (k, m) => { const S = Z; return l(), U(O, null, [i(a) ? (l(), C(S, { key: 0, id: "debug-key", modelValue: i(s), "onUpdate:modelValue": m[0] || (m[0] = w => K(s) ? s.value = w : null), placeholder: "Tìm kiếm tiêu đề, tác giả", "prefix-icon": i(Se), style: { "padding-bottom": "4px" }, onKeydown: De(r, ["enter"]) }, null, 8, ["modelValue", "prefix-icon", "onKeydown"])) : $("", !0), g(S, { id: "debug-text", modelValue: i(o), "onUpdate:modelValue": m[1] || (m[1] = w => K(o) ? o.value = w : null), type: "textarea", readonly: "", rows: "29", placeholder: "Điều này được sử dụng để xuất thông tin gỡ lỗi" }, null, 8, ["modelValue"])], 64) }
    }
}, zt = J(qt, [["__scopeId", "data-v-372e8d43"]]), yo = ge("book", { state: () => ({ connectStatus: "Đang kết nối với máy chủ phụ trợ...", connectType: "", newConnect: !0, searchBooks: [], shelf: [], catalog: [], readingBook: { index: 0, chapterPos: 0 }, popCataVisible: !1, contentLoading: !0, showContent: !1, config: { theme: 0, font: 0, fontSize: 18, readWidth: 800, infiniteLoading: !1, customFontName: "", spacing: { paragraph: 1, line: .8, letter: 0 } }, miniInterface: !1, readSettingsVisible: !1 }), getters: { bookProgress: e => { var a; if (e.catalog.length == 0) return; const { index: t, chapterPos: o, bookName: s, bookAuthor: n } = e.readingBook; let r = (a = e.catalog[t]) == null ? void 0 : a.title; if (r) return { name: s, author: n, durChapterIndex: t, durChapterPos: o, durChapterTime: new Date().getTime(), durChapterTitle: r } } }, actions: { setConnectStatus(e) { this.connectStatus = e }, setConnectType(e) { this.connectType = e }, setNewConnect(e) { this.newConnect = e }, addBooks(e) { this.shelf = e }, setCatalog(e) { this.catalog = e }, setPopCataVisible(e) { this.popCataVisible = e }, setContentLoading(e) { this.contentLoading = e }, setReadingBook(e) { this.readingBook = e }, setConfig(e) { Object.assign(this.config, e) }, setReadSettingsVisible(e) { this.readSettingsVisible = e }, setShowContent(e) { this.showContent = e }, setMiniInterface(e) { this.miniInterface = e }, async setSearchBooks(e) { e.forEach(t => { this.shelf.find(s => s.bookUrl == t.bookUrl) === void 0 && this.searchBooks.push(t) }) }, clearSearchBooks() { this.searchBooks = [] }, async saveBookProgress() { return this.bookProgress ? j.saveBookProgress(this.bookProgress) : Promise.resolve() } } }), Wt = Ae(); const Gt = { __name: "SourceJson", setup(e) { const t = M(), o = P(""), s = async n => { try { t.changeEditTabSource(JSON.parse(n)) } catch { B({ message: "Đã dán nguồn được định dạng không chính xác", type: "error" }) } }; return je(async () => { let n = t.editTabSource; Object.keys(n).length > 0 ? o.value = JSON.stringify(n, null, 4) : o.value = "" }), (n, r) => { const a = Z; return l(), C(a, { id: "source-json", modelValue: i(o), "onUpdate:modelValue": r[0] || (r[0] = k => K(o) ? o.value = k : null), type: "textarea", placeholder: "Dữ liệu json được tuần tự hóa được xuất ra ở đây,có thể được nhập trực tiếp vào ứng dụng 'đọc'", rows: "30", onChange: s, style: { "margin-bottom": "4px" } }, null, 8, ["modelValue"]) } } }, Qt = J(Gt, [["__scopeId", "data-v-7e91a802"]]); const Xt = { __name: "SourceTabTools", setup(e) { const t = M(), { currentTab: o } = Y(t), s = P([["editTab", "sửa nguồn"], ["editDebug", "nguồn gỡ lỗi"], ["editList", "danh sách nguồn"], ["editHelp", "thông tin trợ giúp"]]); return (n, r) => { const a = Qt, k = zt, m = Ft, S = yt, w = fe, v = be; return l(), C(v, { modelValue: i(o), "onUpdate:modelValue": r[0] || (r[0] = x => K(o) ? o.value = x : null) }, { default: p(() => [(l(!0), U(O, null, A(i(s), (x, c) => (l(), C(w, { key: x[0], name: x[0], label: x[1] }, { default: p(() => [c == 0 ? (l(), C(a, { key: 0 })) : $("", !0), c == 1 ? (l(), C(k, { key: 1 })) : $("", !0), c == 2 ? (l(), C(m, { key: 2 })) : $("", !0), c == 3 ? (l(), C(S, { key: 3 })) : $("", !0)]), _: 2 }, 1032, ["name", "label"]))), 128))]), _: 1 }, 8, ["modelValue"]) } } }, Yt = J(Xt, [["__scopeId", "data-v-dcce2457"]]); const Zt = { class: "menu flex-column-center" }, eo = { class: "hotkeys-header flex-space-between" }, to = ["id"], oo = { key: 0 }, no = { class: "hotkeys-settings flex-column-center" }, ro = { class: "title" }, so = { class: "hotkeys-item__content" }, io = { key: 0 }, lo = { key: 0 }, ao = {
    __name: "ToolBar", setup(e) {
        const t = M(), o = () => { const d = B({ message: "Đang tải……", showClose: !0, duration: 0 }); j.getSources().then(({ data: h }) => { h.isSuccess ? (t.changeTabName("editList"), t.saveSources(h.data), B({ message: `Kéo thành công${h.data.length}đầu nguyên`, type: "success" })) : B({ message: h.errorMsg ?? "lỗi phụ trợ", type: "error" }) }).finally(() => d.close()) }, s = () => {
            let d = t.sources; if (t.changeTabName("editList"), d.length === 0) return B({ message: "trống", type: "info" }); B({ message: "Đang tại đẩy lên bên trong", type: "info" }), j.saveSources(d).then(({ data: h }) => {
                if (h.isSuccess) {
                    let u = h.data; if (Array.isArray(u)) {
                        let D = ""; d.length > u.length && (D = `
Các nguồn không đẩy được sẽ được đánh dấu bằng phông chữ màu đỏ!`, t.setPushReturnSources(u)), B({
                            message: `Nguồn đẩy hàng loạt đến「阅读3.0APP」
tổng cộng: ${d.length} dải
thành công: ${u.length} dải
thất bại: ${d.length - u.length} dải${D}`, type: "success"
                        })
                    }
                } else B({
                    message: `Nguồn đẩy hàng loạt không thành công!
ErrorMsg: ${h.errorMsg}`, type: "error"
                })
            })
        }, n = () => { t.changeTabName("editTab"), t.changeEditTabSource(t.currentSource) }, r = () => { t.changeCurrentSource(t.editTabSource) }, a = () => { t.editHistoryUndo() }, k = () => { t.clearEdit(), B({ message: "Đã thanh trừ", type: "success" }) }, m = () => { t.clearEdit(), t.clearAllHistory(), B({ message: "Đã thanh trừ tất cả lịch sử ghi chép", type: "success" }) }, S = () => {
            let d = /bookSource/.test(location.href), h = t.currentSource; Pt(h) ? j.saveSource(h).then(({ data: u }) => {
                u.isSuccess ? (B({ message: `nguồn《${d ? h.bookSourceName : h.sourceName}》lưu thành công vào「阅读3.0APP」`, type: "success" }), t.saveCurrentSource()) : B({
                    message: `nguồn《${d ? h.bookSourceName : h.sourceName}》lưu thất bại!
ErrorMsg: ${u.errorMsg}`, type: "error"
                })
            }) : B({ message: "Vui lòng kiểm tra xem các mục <Bắt buộc> đã được điền đầy đủ chưa", type: "error" })
        }, w = () => { t.startDebug() }, v = P(Array.of({ name: "⇈Đẩy nguyên", hotKeys: [], action: s }, { name: "⇊Kéo nguyên", hotKeys: [], action: o }, { name: "⋙Tạo nguyên", hotKeys: [], action: n }, { name: "⋘Biên tập", hotKeys: [], action: r }, { name: "✗Thanh không danh sách", hotKeys: [], action: k }, { name: "↶Huỷ bỏ thao tác", hotKeys: [], action: a }, { name: "↷Làm lại thao tác", hotKeys: [], action: m }, { name: "⇏Điều chỉnh thử", hotKeys: [], action: w }, { name: "✓Bảo tồn", hotKeys: [], action: S })), x = P(!0), c = P(!1), y = P(-1), V = () => { c.value || (x.value = !1), c.value = !1 }; ye(x, d => { if (!d) { H.unbind("*"), q(), T(); return } q(), H.unbind(), H("*", h => { h.preventDefault(); let u = H.getPressedKeyString(); u.length == 1 && u[0] == "esc" || c.value && y.value > -1 && (v.value[y.value].hotKeys = u) }) }, { immediate: !0 }); const f = d => { c.value = !0, B({ message: "Theo ESC khóa hoặc click chỗ hổng kết thúc ghi vào", type: "info" }), v.value[d].hotKeys = [], y.value = d }, N = () => { const d = []; v.value.forEach(({ hotKeys: h }) => { d.push(h) }), R(d), x.value = !1 }, T = () => { H.filter = () => !0, v.value.forEach(({ hotKeys: d, action: h }) => { d.length != 0 && H(d.join("+"), u => { u.preventDefault(), h.call(null) }) }) }, R = d => { localStorage.setItem("legado_web_hotkeys", JSON.stringify(d)) }; function q() { try { const d = JSON.parse(localStorage.getItem("legado_web_hotkeys")); return !Array.isArray(d) || d.length == 0 ? !1 : (v.value.forEach((h, u) => h.hotKeys = d[u]), !0) } catch { B({ message: "Phím tắt phối trí sai lầm", type: "error" }), localStorage.removeItem("legado_web_hotkeys") } return !1 } return Ke(() => { q() && (x.value = !1) }), (d, h) => { const u = le, D = he, Be = He; return l(), U(O, null, [_("div", Zt, [(l(!0), U(O, null, A(i(v), I => (l(), C(u, { size: "large", key: I.name, onClick: I.action }, { default: p(() => [b(X(I.name), 1)]), _: 2 }, 1032, ["onClick"]))), 128)), g(u, { size: "large", onClick: h[0] || (h[0] = () => x.value = !0) }, { default: p(() => [b("Phím tắt")]), _: 1 })]), g(Be, { modelValue: i(x), "onUpdate:modelValue": h[1] || (h[1] = I => K(x) ? x.value = I : null), "show-close": !1, "before-close": V }, { header: p(({ titleClass: I, titleId: te }) => [_("div", eo, [_("div", { id: te, class: me(I) }, [b("Phím tắt thiết trí"), i(c) ? (l(), U("span", oo, [g(D, null, { default: p(() => [b(" / Ghi vào bên trong ")]), _: 1 })])) : $("", !0)], 10, to), g(u, { disabled: i(c), onClick: N, icon: i(Me) }, { default: p(() => [b("Bảo tồn")]), _: 1 }, 8, ["disabled", "icon"])])]), default: p(() => [_("div", no, [(l(!0), U(O, null, A(i(v), (I, te) => (l(), U("div", { key: I.name, class: "hotkeys-item flex-space-between" }, [_("span", ro, [g(D, null, { default: p(() => [b(X(I.name), 1)]), _: 2 }, 1024)]), _("div", so, [(l(!0), U(O, null, A(I.hotKeys, (oe, Ue) => (l(), U("div", { key: oe }, [_("kbd", null, X(oe), 1), Ue + 1 < I.hotKeys.length ? (l(), U("span", io, [g(D, null, { default: p(() => [b("+")]), _: 1 })])) : $("", !0)]))), 128)), I.hotKeys.length == 0 ? (l(), U("span", lo, "Không thiết trí thiết")) : $("", !0)]), g(u, { disabled: i(c), text: "", icon: i(_e), onClick: oe => f(te) }, { default: p(() => [b("Biên tập")]), _: 2 }, 1032, ["disabled", "icon", "onClick"])]))), 128))])]), _: 1 }, 8, ["modelValue"])], 64) }
    }
}, co = J(ao, [["__scopeId", "data-v-1427b2c0"]]); const uo = { __name: "SourceTabForm", props: ["config"], setup(e) { const t = M(), { currentSource: o } = Y(t); return (s, n) => { const r = Z, a = Fe, k = qe, m = ze, S = We, w = Ge, v = Qe, x = fe, c = be; return l(), C(c, { id: "source-edit" }, { default: p(() => [(l(!0), U(O, null, A(Object.values(e.config), ({ name: y, children: V }) => (l(), C(x, { label: y, key: y }, { default: p(() => [g(v, { "label-position": "right", "label-width": "5em" }, { default: p(() => [(l(!0), U(O, null, A(V, ({ type: f, title: N, namespace: T, id: R, array: q, hint: d, required: h }) => (l(), C(w, { label: N, key: N, required: h }, { default: p(() => [f == "String" && typeof T > "u" ? (l(), C(r, { key: 0, type: "textarea", modelValue: i(o)[R], "onUpdate:modelValue": u => i(o)[R] = u, placeholder: d, autosize: "" }, null, 8, ["modelValue", "onUpdate:modelValue", "placeholder"])) : $("", !0), f == "String" && typeof T < "u" ? (l(), C(r, { key: 1, type: "textarea", modelValue: i(o)[T][R], "onUpdate:modelValue": u => i(o)[T][R] = u, placeholder: d, autosize: "" }, null, 8, ["modelValue", "onUpdate:modelValue", "placeholder"])) : $("", !0), f == "Boolean" ? (l(), C(a, { key: 2, modelValue: i(o)[R], "onUpdate:modelValue": u => i(o)[R] = u }, null, 8, ["modelValue", "onUpdate:modelValue"])) : $("", !0), f == "Number" ? (l(), C(k, { key: 3, modelValue: i(o)[R], "onUpdate:modelValue": u => i(o)[R] = u, min: 0 }, null, 8, ["modelValue", "onUpdate:modelValue"])) : $("", !0), f == "Array" ? (l(), C(S, { key: 4, modelValue: i(o)[R], "onUpdate:modelValue": u => i(o)[R] = u }, { default: p(() => [(l(!0), U(O, null, A(q, (u, D) => (l(), C(m, { value: D, key: u, label: u }, null, 8, ["value", "label"]))), 128))]), _: 2 }, 1032, ["modelValue", "onUpdate:modelValue"])) : $("", !0)]), _: 2 }, 1032, ["label", "required"]))), 128))]), _: 2 }, 1024)]), _: 2 }, 1032, ["label"]))), 128))]), _: 1 }) } } }, po = J(uo, [["__scopeId", "data-v-2cfb5302"]]), ho = { base: { name: "Cơ sở", children: [{ title: "Type", id: "Type", type: "Array", array: ["văn bản", "âm thanh", "hình ảnh", "tài liệu"], required: true, }, { title: "bookSourceUrl", id: "bookSourceUrl", type: "String", hint: "Thông thường điền vào trang chủ của website, ví dụ: https://www.qidian.com", required: true, }, { title: "bookSourceName", id: "bookSourceName", type: "String", hint: "sẽ xuất hiện trong danh sách nguồn", required: true, }, { title: "bookSourceGroup", id: "bookSourceGroup", type: "String", hint: "đặc trưng thông tin mô tả nguồn", }, { title: "bookSourceComment", id: "bookSourceComment", type: "String", hint: "Mô tả nguồn tác giả và trạng thái", }, { title: "variableComment", id: "variableComment", type: "String", hint: "Mô tả biến nguồn sách", }, { title: "loginUrl", id: "loginUrl", type: "String", hint: "Điền URL đăng nhập trang web, chỉ hữu ích cho các nguồn yêu cầu đăng nhập", }, { title: "loginUi", id: "loginUi", type: "String", hint: "Tùy chỉnh màn hình đăng nhập", }, { title: "loginCheckJs", id: "loginCheckJs", type: "String", hint: "js phát hiện đăng nhập", }, { title: "coverDecodeJs", id: "coverDecodeJs", type: "String", hint: "giải mã bìa js", }, { title: "concurrentRate", id: "concurrentRate", type: "String", hint: "Tỷ lệ đồng thời, chẳng hạn như 1000 (khoảng thời gian truy cập 1000 mili giây) hoặc 1/1000 (truy cập một lần trong vòng 1000 mili giây)", }, { title: "jsLib", id: "jsLib", type: "String", hint: "js, bạn có thể điền js hoặc đối tượng khóa-giá trị để nhận các tệp js trực tuyến", }, { title: "header", id: "header", type: "String", hint: "ID khách hàng", }, { title: "bookUrlPattern", id: "bookUrlPattern", type: "String", hint: "Nó hợp lệ khi tên miền của url trang chi tiết khác với tên miền của url nguồn, được sử dụng để thêm URL", },], }, search: { name: "tìm kiếm", children: [{ title: "searchUrl", id: "searchUrl", type: "String", hint: "[Có thể bỏ qua tên miền]/search.php@kw={{key}}", }, { title: "checkKeyWord", namespace: "ruleSearch", id: "checkKeyWord", type: "String", hint: "Kiểm tra từ khóa, bạn nên điền vào", }, { title: "bookList", namespace: "ruleSearch", id: "bookList", type: "String", hint: "Chọn nút sách (kết quả quy tắc là Danh sách<Phần tử>)", }, { title: "name", namespace: "ruleSearch", id: "name", type: "String", hint: "Chọn tiêu đề sách nút (kết quả quy tắc là Chuỗi)", }, { title: "author", namespace: "ruleSearch", id: "author", type: "String", hint: "Chọn tác giả nút (kết quả quy tắc là Chuỗi)", }, { title: "kind", namespace: "ruleSearch", id: "kind", type: "String", hint: "Chọn thông tin phân loại nút (kết quả quy tắc là Chuỗi)", }, { title: "wordCount", namespace: "ruleSearch", id: "wordCount", type: "String", hint: "Chọn thông tin đếm từ của nút (kết quả quy tắc là Chuỗi)", }, { title: "lastChapter", namespace: "ruleSearch", id: "lastChapter", type: "String", hint: "Chọn chương mới nhất của nút (kết quả của quy tắc là Chuỗi)", }, { title: "intro", namespace: "ruleSearch", id: "intro", type: "String", hint: "Chọn giới thiệu sách nút (kết quả quy tắc là Chuỗi)", }, { title: "coverUrl", namespace: "ruleSearch", id: "coverUrl", type: "String", hint: "Chọn bìa sách của nút (kết quả của quy tắc là url kiểu Chuỗi)", }, { title: "bookUrl", namespace: "ruleSearch", id: "bookUrl", type: "String", hint: "Chọn URL của trang chi tiết sách (kết quả quy tắc là một URL có kiểu String)", },], }, find: { name: "Phát hiện", children: [{ title: "exploreUrl", id: "exploreUrl", type: "String", hint: "Định dạng khám phá duy nhất <name>::<url> hoặc {url:<url>,title:<name>,style:...}; định dạng trước được kết nối bằng một dòng mới hoặc && và định dạng sau được đặt trong một mảng ; js có thể được sử dụng để tạo động", }, { title: "exploreScreen", id: "exploreScreen", type: "String", hint: "Khám phá các quy tắc bộ lọc", }, { title: "bookList", namespace: "ruleExplore", id: "bookList", type: "String", hint: "Chọn nút sách (kết quả quy tắc là Danh sách<Phần tử>)", }, { title: "name", namespace: "ruleExplore", id: "name", type: "String", hint: "Chọn tiêu đề sách nút (kết quả quy tắc là Chuỗi)", }, { title: "author", namespace: "ruleExplore", id: "author", type: "String", hint: "Chọn tác giả nút (kết quả quy tắc là Chuỗi)", }, { title: "kind", namespace: "ruleExplore", id: "kind", type: "String", hint: "Chọn thông tin phân loại nút (kết quả quy tắc là Chuỗi)", }, { title: "wordCount", namespace: "ruleExplore", id: "wordCount", type: "String", hint: "Chọn thông tin đếm từ của nút (kết quả quy tắc là Chuỗi)", }, { title: "lastChapter", namespace: "ruleExplore", id: "lastChapter", type: "String", hint: "Chọn chương mới nhất của nút (kết quả của quy tắc là Chuỗi)", }, { title: "intro", namespace: "ruleExplore", id: "intro", type: "String", hint: "Chọn giới thiệu sách nút (kết quả quy tắc là Chuỗi)", }, { title: "coverUrl", namespace: "ruleExplore", id: "coverUrl", type: "String", hint: "Chọn bìa sách của nút (kết quả của quy tắc là url kiểu Chuỗi)", }, { title: "bookUrl", namespace: "ruleExplore", id: "bookUrl", type: "String", hint: "Chọn URL của trang chi tiết sách (kết quả quy tắc là một URL có kiểu String)", },], }, detail: { name: "chi tiết", children: [{ title: "init", namespace: "ruleBookInfo", id: "init", type: "String", hint: "Được sử dụng để tăng tốc độ truy xuất thông tin chi tiết, chỉ hỗ trợ quy tắc tất cả trong một", }, { title: "name", namespace: "ruleBookInfo", id: "name", type: "String", hint: "Chọn tiêu đề sách nút (kết quả quy tắc là Chuỗi)", }, { title: "author", namespace: "ruleBookInfo", id: "author", type: "String", hint: "Chọn tác giả nút (kết quả quy tắc là Chuỗi)", }, { title: "kind", namespace: "ruleBookInfo", id: "kind", type: "String", hint: "Chọn thông tin phân loại nút (kết quả quy tắc là Chuỗi)", }, { title: "wordCount", namespace: "ruleBookInfo", id: "wordCount", type: "String", hint: "Chọn thông tin đếm từ của nút (kết quả quy tắc là Chuỗi)", }, { title: "lastChapter", namespace: "ruleBookInfo", id: "lastChapter", type: "String", hint: "Chọn chương mới nhất của nút (kết quả của quy tắc là Chuỗi)", }, { title: "intro", namespace: "ruleBookInfo", id: "intro", type: "String", hint: "Chọn giới thiệu sách nút (kết quả quy tắc là Chuỗi)", }, { title: "coverUrl", namespace: "ruleBookInfo", id: "coverUrl", type: "String", hint: "Chọn bìa sách của nút (kết quả của quy tắc là url kiểu Chuỗi)", }, { title: "tocUrl", namespace: "ruleBookInfo", id: "tocUrl", type: "String", hint: "Chọn URL của trang chi tiết sách (kết quả quy tắc là URL kiểu String, có thể bỏ qua nếu trùng với trang chi tiết)", }, { title: "downloadUrls", namespace: "ruleBookInfo", id: "downloadUrls", type: "String", hint: "URL tải xuống nguồn cho các tệp và sách (kết quả của quy tắc là một URL kiểu Chuỗi, nhiều liên kết trả về một mảng)", }, { title: "canReName", namespace: "ruleBookInfo", id: "canReName", type: "String", hint: "Cho phép sửa tên tác giả của tên sách (kết quả của quy tắc là kiểu String, mặc định không được phép)", },], }, directory: { name: "Mục lục", children: [{ title: "init", namespace: "ruleToc", id: "preUpdateJs", type: "String", hint: "Gọi JS trước khi cập nhật thư mục để cập nhật động liên kết thư mục", }, { title: "chapterList", namespace: "ruleToc", id: "chapterList", type: "String", hint: "Chọn nút chương của mục lục (kết quả của luật là List<Element>)", }, { title: "chapterName", namespace: "ruleToc", id: "chapterName", type: "String", hint: "Chọn tên chương (kết quả quy tắc là String)", }, { title: "chapterUrl", namespace: "ruleToc", id: "chapterUrl", type: "String", hint: "Chọn link chương (kết quả của luật là một Url kiểu String)", }, { title: "formatJs", namespace: "ruleToc", id: "formatJs", type: "String", hint: "Gọi lại để duyệt qua danh sách chương đã loại bỏ trùng lặp, cung cấp các biến chỉ mục (số chương bắt đầu từ 1), tiêu đề (tiêu đề chương), cung cấp thêm g int (giá trị ban đầu 0), trả về giá trị làm tiêu đề mới", }, { title: "isVolume", namespace: "ruleToc", id: "isVolume", type: "String", hint: "Tên chương có phải là tên tập hay không (kết quả quy tắc là Bool)", }, { title: "isVip", namespace: "ruleToc", id: "isVip", type: "String", hint: "Chương tiết phải chăng vì VIP chương tiết (Quy tắc kết quả vì Bool)", }, { title: "isPay", namespace: "ruleToc", id: "isPay", type: "String", hint: "Chương có được mua hay không (kết quả quy tắc là Bool)", }, { title: "updateTime", namespace: "ruleToc", id: "updateTime", type: "String", hint: "Chọn thông tin chương (kết quả quy tắc là String)", }, { title: "nextTocUrl", namespace: "ruleToc", id: "nextTocUrl", type: "String", hint: "Chọn liên kết trên trang tiếp theo của thư mục (kết quả của quy tắc là Danh sách<Chuỗi> hoặc Chuỗi)", },], }, content: { name: "nội dung", children: [{ title: "webJs", namespace: "ruleContent", id: "webJs", type: "String", hint: "Inject javascript, được sử dụng để mô phỏng nhấp chuột, v.v., phải có giá trị trả về, thường là kiểu chuỗi", }, { title: "content", namespace: "ruleContent", id: "content", type: "String", hint: "Chọn nội dung cơ thể (kết quả quy tắc là Chuỗi)", }, { title: "title", namespace: "ruleContent", id: "title", type: "String", hint: "Kết quả tìm nạp sẽ ghi đè lên tiêu đề chương (quy tắc kết quả là Chuỗi)", }, { title: "nextContentUrl", namespace: "ruleContent", id: "nextContentUrl", type: "String", hint: "Chọn liên kết trang tiếp theo (không phải chương tiếp theo) (kết quả của quy tắc là một Url kiểu String)", }, { title: "sourceRegex", namespace: "ruleContent", id: "sourceRegex", type: "String", hint: "Khớp các đặc điểm url của tài nguyên để đánh hơi", }, { title: "replaceRegex", namespace: "ruleContent", id: "replaceRegex", type: "String", hint: "Nội dung nhiều trang được hợp nhất và thay thế, được sử dụng để làm sạch văn bản", }, { title: "imageStyle", namespace: "ruleContent", id: "imageStyle", type: "String", hint: "ĐẦY ĐỦ: Đã lát mà không tô: kiểu mặc định", }, { title: "payAction", namespace: "ruleContent", id: "payAction", type: "String", hint: "Điền JavaScript để quay lại link mua hàng hoặc gọi giao diện mua hàng", }, { title: "imageDecode", namespace: "ruleContent", id: "imageDecode", type: "String", hint: "Điền vào JavaScript để trả về các byte của hình ảnh được giải mã ", },], }, other: { name: "khác", children: [{ title: "kích hoạt tìm kiếm", id: "enabled", type: "Boolean", }, { title: "kích hoạt khám phá", id: "enabledExplore", type: "Boolean", }, { title: "Cookie", id: "enabledCookieJar", type: "Boolean", }, { title: "trọng lượng tìm kiếm", id: "weight", type: "Number", }, { title: "sắp xếp số", id: "customOrder", type: "Number", }] } }, go = {
    base: {
        name: "Cơ sở", children: [{ title: "sourceUrl", id: "sourceUrl", type: "String", hint: "https://www.qidian.com", required: !0 }, { title: "sourceIcon", id: "sourceIcon", type: "String", hint: "Điền hình ảnh internet kết nối" }, { title: "sourceName", id: "sourceName", type: "String", hint: "Sẽ biểu hiện tại nguyên danh sách", required: !0 }, { title: "sourceGroup", id: "sourceGroup", type: "String", hint: "Miêu tả nguyên đặc thù tin tức" }, { title: "sourceComment", id: "sourceComment", type: "String", hint: "描述源作者和状态" }, {
            title: "sortUrl", id: "sortUrl", type: "String", hint: `名称1::链接1
名称2::链接2`}, { title: "登录地址", id: "loginUrl", type: "String", hint: "填写网站登录网址,仅在需要登录的源有用" }, { title: "登录界面", id: "loginUi", type: "String", hint: "自定义登录界面" }, { title: "登录检测", id: "loginCheckJs", type: "String", hint: "登录检测js" }, { title: "封面解密", id: "coverDecodeJs", type: "String", hint: "封面解密js" }, { title: "请求头", id: "header", type: "String", hint: "客户端标识" }, { title: "变量说明", id: "variableComment", type: "String", hint: "源变量说明" }, { title: "并发率", id: "concurrentRate", type: "String", hint: "并发率" }]
    }, list: { name: "列表", children: [{ title: "列表规则", id: "ruleArticles", type: "String", hint: "规则结果为List<Element>" }, { title: "翻页规则", id: "ruleNextPage", type: "String", hint: "下一页链接 规则结果为List<String>或String" }, { title: "标题规则", id: "ruleTitle", type: "String", hint: "文章标题 规则结果为String" }, { title: "时间规则", id: "rulePubDate", type: "String", hint: "文章发布时间 规则结果为String" }, { title: "描述规则", id: "ruleDescription", type: "String", hint: "文章简要描述 规则结果为String" }, { title: "图片规则", id: "ruleImage", type: "String", hint: "文章图片链接 规则结果为String" }, { title: "链接规则", id: "ruleLink", type: "String", hint: "文章链接 规则结果为String" }] }, webView: { name: "WebView", children: [{ title: "内容规则", id: "ruleContent", type: "String", hint: "文章正文" }, { title: "样式规则", id: "style", type: "String", hint: "文章正文样式 填写css" }, { title: "注入规则", id: "injectJs", type: "String", hint: "注入网页的JavaScript" }, { title: "黑名单", id: "contentBlacklist", type: "String", hint: "webView链接加载黑名单，英文逗号隔开" }, { title: "白名单", id: "contentWhitelist", type: "String", hint: "webView链接加载白名单，英文逗号隔开" }] }, other: { name: "其他", children: [{ title: "列表样式", id: "articleStyle", type: "Array", array: ["默认", "大图", "双列"] }, { title: "加载地址", id: "loadWithBaseUrl", type: "Boolean" }, { title: "启用JS", id: "enableJs", type: "Boolean" }, { title: "启用", id: "enabled", type: "Boolean" }, { title: "Cookie", id: "enabledCookieJar", type: "Boolean" }, { title: "单URL", id: "singleUrl", type: "Boolean" }, { title: "排序编号", id: "customOrder", type: "Number" }] }
}; const _o = { class: "editor" }, mo = { __name: "SourceEditor", setup(e) { let t; return /bookSource/i.test(location.href) ? (t = ho, document.title = "Sách nguyên quản lý") : (t = go, document.title = "Đặt mua nguyên quản lý"), (o, s) => { const n = po, r = co, a = Yt; return l(), U("div", _o, [g(n, { class: "left", config: i(t) }, null, 8, ["config"]), g(r), g(a, { class: "right" })]) } } }, pe = J(mo, [["__scopeId", "data-v-5fe2b79d"]]), we = [{ path: "/bookSource", name: "book-home", component: pe }, { path: "/rssSource", name: "rss-home", component: pe }]; se({ history: ie(), routes: we }); const xe = se({ history: ie(), routes: ke.concat(we) }); xe.afterEach(e => { e.name == "shelf" && (document.title = "Giá sách") }); Xe(ot).use(Wt).use(xe).mount("#app"); ne(() => import("./config-da530f4f.js"), ["./config-da530f4f.js", "./vendor-b9134af1.js", "./vendor-5578283d.css", "./config-811f2a0b.css"], import.meta.url); export { j as A, J as _, yo as u };
